# pyproject.toml
[project]
name = "agent-lab"
version = "0.1.0"
description = "Gradio-based platform for AI agent testing and cost optimization"
requires-python = ">=3.11"
dependencies = [
    "gradio>=5.0.0",
    "pydantic-ai>=0.0.14",
    "openai>=1.0.0",
    "httpx>=0.27.0",
    "python-dotenv>=1.0.0",
    "pandas>=2.0.0",
    "plotly>=5.0.0",
    "loguru>=0.7.0",
    "prometheus-client>=0.20.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0",
    "pytest-cov>=6.0",
    "pytest-asyncio>=0.24.0",
    "pytest-xdist>=3.6",
    "pytest-randomly>=3.15",
    "pytest-mock>=3.14",
    "hypothesis>=6.100",
    "mutmut>=3.1",
    "flake8>=7.0",
    "black>=24.0",
    "isort>=5.13",
    "mypy>=1.10",
    "bandit>=1.7",
]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",
    "-q",
    "--strict-markers",
    "--strict-config",
    "--import-mode=importlib",
    "--cov=agents",
    "--cov=services",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--durations=10",
    "--durations-min=1.0",
]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

markers = [
    "unit: Fast, hermetic unit tests",
    "integration: Multi-component integration tests",
    "slow: Long-running tests (>1s)",
    "requires_api_key: Tests requiring OPENROUTER_API_KEY",
    "network: Tests that make real network calls",
    "playwright: E2E browser tests",
]

filterwarnings = [
    "error::DeprecationWarning",
    "ignore::pytest.PytestUnraisableExceptionWarning",
]

[tool.coverage.run]
branch = true
source = ["agents", "services", "src"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/.venv/*",
]
parallel = true

[tool.coverage.report]
fail_under = 90
show_missing = true
skip_covered = false
precision = 2
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.black]
line-length = 100
target-version = ["py311", "py312", "py313"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[build-system]
requires = ["setuptools>=68.0"]
build-backend = "setuptools.build_meta"
